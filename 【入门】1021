#include <stdio.h>
#include <math.h>

//迭代法求平方根
/*牛顿迭代法求平方根:
    假设a。欲求a的平方根，首先猜测一个值X1=a/2，然后根据迭代公式 X（n+1）=（Xn+a/Xn）/2，
    算出X2，再将X2代公式的右边算出X3等等，直到连续两次算出的Xn和X（n+1）的差的绝对值小于
    某个值，即认为找到了精确的平方根

例：
假设a=4，
    x1=4/2=2;
    x2=(2+4/2)/2=2   2-2<0.00001
    ==>平方根=2

假设a=9，
    x1=9/2=4.5;
    x2=(4.5+9/4.5)/2=3.25   4.5-3.25>0.00001
    x3=(3.25+9/3.25)/2=3.00962   3.25-3.00962>0.00001
    x4=(3.00962+9/3.00962)/2=3.00002   3.00962-3.00002>0.00001
    ....
     ==>平方根=3

     利用循环，即可解题*/
int main()
{
    double a;
    scanf("%lf", &a);
    double x1, x2;
    x1 = a / 2;
    double diff;
    do
    {
        x2 = (x1 + a / x1) / 2;
        diff = fabs(x1-x2);
        x1 = x2;
    }while (diff > 0.00001);
    printf("%.3lf", x2);
    return 0;
}
